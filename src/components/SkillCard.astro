---
import { Icon } from "astro-icon/components";

const { icon = "mdi:rocket", title = "Title" } = Astro.props;
---

<div class="skill-card">
  <div class="relative flex h-fit flex-col justify-start gap-4 p-8">
    <Icon name={icon} size={64} class="skill-card-icon min-h-[64px] dark:fill-white" />
    <div class="content relative">
      <h3>{title}</h3>
      <div class="description">
        <slot />
      </div>
      <div class="show-more absolute right-3 cursor-pointer text-[var(--action-color)]"></div>
    </div>
  </div>
</div>

<style lang="scss">
  @use "../assets/scss/base/breakpoint" as *;

  .skill-card {
    position: relative;
    width: calc(100% - 1rem);
    height: 269px;
    transition: height 0.5s ease-in-out, top 0.5s ease-in-out;

    > * {
      position: relative;
      z-index: 2;
    }

    @include breakpoint(large) {
      width: 100%;
    }

    &::before,
    &::after {
      content: "";
      position: absolute;
    }

    &::before {
      inset: 0;
      background-color: var(--neutral-100);
      border: 3px solid var(--neutral-700);
      border-radius: 1rem;
      box-shadow: 0 0 0 6px var(--neutral-100);
      z-index: 1;
    }

    &::after {
      background-color: var(--action-color);
      inset: 1rem -0.85rem -0.85rem 1rem;
      border-radius: 1rem;
      z-index: 0;
    }
  }

  .description {
    height: 72px;
    margin-bottom: 0.5rem;
    overflow: hidden;
    transition: height 0.5s ease-in-out;
  }

  .show-more {
    display: none;

    &.show {
      display: block;
    }
  }

  .skill-card .skill-card-icon {
    width: 4rem;
    height: 4rem;
    color: var(--action-color);
  }

  :global(.darkmode .skill-card::before) {
    background-color: var(--dark-100);
    box-shadow: 0 0 0 6px var(--dark-100);
  }
</style>

<script>
  //variables
  const skillCardElements = document.querySelectorAll<HTMLDivElement>(".skill-card");

  const showMoreButtonLabels = {
    more: "+ Show more",
    less: "- Show less",
  };
  const defaultDimensions = {
    skillCard: 269,
    description: 72,
  };

  //functions
  const getChildElements = (
    skillCardElement: Element
  ): { descriptionElement?: HTMLElement; showMoreButton?: HTMLElement } => ({
    descriptionElement: skillCardElement.querySelector<HTMLElement>(".description") ?? undefined,
    showMoreButton: skillCardElement.querySelector<HTMLElement>(".show-more") ?? undefined,
  });

  const toggleShowMoreButton = (skillCardElement: HTMLElement) => {
    const { descriptionElement, showMoreButton } = getChildElements(skillCardElement);
    if (!showMoreButton || !descriptionElement) return;

    if (!showMoreButton.textContent) {
      showMoreButton.textContent = showMoreButtonLabels.more;
      return;
    }

    const shouldShrink = showMoreButton.textContent === showMoreButtonLabels.less;

    descriptionElement.setAttribute("aria-expanded", shouldShrink ? "false" : "true");
    showMoreButton.textContent = shouldShrink ? showMoreButtonLabels.more : showMoreButtonLabels.less;

    const heightDifference = descriptionElement.scrollHeight - descriptionElement.clientHeight;
    descriptionElement.style.height = shouldShrink
      ? `${defaultDimensions.description}px`
      : `${defaultDimensions.description + heightDifference}px`;
    skillCardElement.style.height = shouldShrink
      ? `${defaultDimensions.skillCard}px`
      : `${defaultDimensions.skillCard + heightDifference}px`;
  };

  //execution
  skillCardElements.forEach((skillCardElement) => {
    const { descriptionElement, showMoreButton } = getChildElements(skillCardElement);

    const descriptionIsOverflowing = (descriptionElement?.clientHeight ?? 0) < (descriptionElement?.scrollHeight ?? 0);
    if (descriptionIsOverflowing) {
      showMoreButton?.classList.add("show");
      toggleShowMoreButton(skillCardElement);
    }
  });

  window.addEventListener("click", (event) => {
    const target = event.target as Element;

    const skillCardElement = target.parentElement?.parentElement?.parentElement;
    if (skillCardElement && target.classList.contains("show-more")) {
      toggleShowMoreButton(skillCardElement);
    }
  });
</script>
