---
import DefaultLayout from "../layouts/DefaultLayout.astro";
import Hero from "../components/Hero.astro";
import SkillCard from "../components/SkillCard.astro";
import Counter from "../components/Counter.astro";
import ContentMedia from "../components/ContentMedia.astro";

type Skill = {
  title: string;
  description?: string | string[];
  icon: string | string[];
};

const skills: Skill[] = [
  {
    title: "TypeScript (JS)",
    icon: "devicon:typescript",
    description: [
      "I've been using JS pretty much ever since I began learning programming, all the way through my whole career so far.",
      "This includes both backend and frontend systems and is almost always paired with some frameworks - such as React, Node.js, Next.js, Astro etc - or some other language - such as HTML, CSS etc.",
    ],
  },
  {
    title: "React",
    icon: "devicon:react",
    description:
      "A core part of my experience, used it for my practical Bachelor's thesis and most of my career. It's been my go-to frontend framework and I've had the chance to use it in many contexts.",
  },
  {
    title: ".NET Core (C#)",
    icon: "devicon:dotnetcore",
    description: [
      "My first professional experience building backends was with .NET Core. I started with the basics, building CRUD REST APIs and such.",
      "I then went on to use it for 3 years and had the chance to go deep into many important concepts. Clean Architecture, Dependency Injection, Inversion of Control, Authentication and Authorization, DB integration, to name a few.",
    ],
  },
  {
    title: "SQL",
    icon: "devicon:azuresqldatabase",
    description: [
      "I have worked mostly with relational databases using SQL through my career. I've had the chance to work both directly with SQL commands and with ORMs.",
      "While ORMs can come in handy and spare a lot of effort, the liberty and efficiency of writing your own scripts also has it's place. In addition, it allowed me to delve deeper into some concepts like indexes, table joins, aggregations, triggers and stored procedures.",
    ],
  },
  {
    title: "Azure",
    icon: "devicon:azure",
    description: [
      "As far as Cloud, DevOps, CI/CD and SCRUM goes, most of my experience is in Azure.",
      "I also participated in a demand to create the Infra as Code of an old and large system with ARM templates, which had me learn a lot about infrastructure, Cloud resources, app insights etc.",
    ],
  },
  {
    title: "Next.js",
    icon: "devicon:nextjs",
    description: [
      "This framework was an eye opener for me. When I started to think about a personal project to work on, some fellow developers suggested Next.js.",
      "At first it was a confusing but interesting challenge, using a fullstack framework. I then did a lot of research and picked up on the fully typesafe monorepo trend.",
      "It was by using the T3 stack that I realized how efficient these new frameworks and libraries allow you to be. And that's also how I put Lemonfy together.",
    ],
  },
  {
    title: "Node.js",
    icon: "devicon:nodejs",
    description:
      "For a short 6 months project, I had the chance to lead the implementation of a few Node.js APIs and put the concepts I'd learned previously to good use.",
  },
  {
    title: "Astro",
    icon: "devicon:astro",
    description: "Honourable mention since it's what I built this site with, but that's my only experience with it.",
  },
  {
    title: "Misc",
    icon: [
      "devicon:tailwindcss",
      "devicon:trpc",
      "devicon:prisma",
      "devicon:yaml",
      "devicon:docker",
      "devicon:oracle",
      "devicon:express",
      "devicon:redux",
    ],
    description: [
      "There are many more libraries, frameworks and systems used within an app's stack which I haven't gone so deep into, or haven't been so relevant, but are worth mentioning.",
      "Such as: Tailwind CSS, tRPC, Prisma, YAML, Docker, Oracle, Express, Redux, Zustand + Immer.",
    ],
  },
];
---

<DefaultLayout title="Home" showCallToAction>
  <Hero />
  <section class="my-32 md:my-64">
    <div class="container">
      <h2 class="mb-16 text-6xl">My Skills</h2>
      <div class="grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-3">
        {
          skills.map((skill) => (
            <SkillCard icon={skill.icon} title={skill.title}>
              {Array.isArray(skill.description) ? (
                <div class="flex flex-col gap-3">
                  {skill.description.map((paragraph) => (
                    <p>{paragraph}</p>
                  ))}
                </div>
              ) : (
                skill.description
              )}
            </SkillCard>
          ))
        }
      </div>
    </div>
  </section>
  <ContentMedia imgSrc="/lemonfy-example-1.png" subtitle="Lemonfy's Editor with the tabs for Happy Birthday.">
    <h2>Lemonfy</h2>
    <p class="text-2xl">
      <a href="/lemonfy">Lemonfy</a> is my main side project, in which I've been learning a lot of new technologies and honing
      my skills. I've started working on it on Aug/2022, with the goal of uniting a passion for music with the oportunity
      to study software development.
    </p>
    <p class="text-2xl">
      The project aims to deliver a software capable of music composition and reproduction. It does so using a tablature
      notation and digital sound synthesis. It contains a Library page, which lists all Songs composed with the system's
      Editor, allowing anyone to load up and reproduce a Song's tablature and in turn learn how to play it.
    </p>
  </ContentMedia>
  <ContentMedia
    imgSrc="/trail-running.gif"
    subtitle="Me doing some trail running with a cute dog."
    reverseImg={true}
    zoomable={false}
  >
    <h2>WCAG 2.1 AA Compliant</h2>
    <p class="text-2xl">
      Using semantic HTML, landmarks, skip links, screen reader friendly content, aria-labels, keyboard accessible
      navigation and components, clear outlines and tab indicators and the right color contrast, you're more certain of
      reaching WCAG AA compliance.
    </p>
  </ContentMedia>
  <section class="mb-16 mt-32 md:mb-32 md:mt-64">
    <div class="container">
      <h2 class="mb-16 text-6xl">Counters</h2>
      <div class="grid grid-cols-1 gap-12 sm:grid-cols-2 md:grid-cols-4">
        <Counter count="130" title="Stars" sub="On GitHub" />
        <Counter count="17" title="Accessible" sub="Components" />
        <Counter count="500" title="Commits" sub="Merged" />
        <Counter count="18+" title="Months" sub="Since launch" />
      </div>
    </div>
  </section>
</DefaultLayout>
